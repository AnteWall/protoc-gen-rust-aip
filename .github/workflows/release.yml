name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Set up Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable

    - name: Install Protocol Buffers compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler

    - name: Install Buf
      run: |
        BUF_VERSION="1.28.1"
        curl -sSL "https://github.com/bufbuild/buf/releases/download/v${BUF_VERSION}/buf-$(uname -s)-$(uname -m)" -o buf
        chmod +x buf
        sudo mv buf /usr/local/bin/

    - name: Run checks
      run: make check

    - name: Build for multiple platforms
      run: |
        GOOS=linux GOARCH=amd64 go build -o protoc-gen-rust-aip-linux-amd64 ./cmd/protoc-gen-rust-aip
        GOOS=linux GOARCH=arm64 go build -o protoc-gen-rust-aip-linux-arm64 ./cmd/protoc-gen-rust-aip
        GOOS=darwin GOARCH=amd64 go build -o protoc-gen-rust-aip-darwin-amd64 ./cmd/protoc-gen-rust-aip
        GOOS=darwin GOARCH=arm64 go build -o protoc-gen-rust-aip-darwin-arm64 ./cmd/protoc-gen-rust-aip
        GOOS=windows GOARCH=amd64 go build -o protoc-gen-rust-aip-windows-amd64.exe ./cmd/protoc-gen-rust-aip

    - name: Create release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          protoc-gen-rust-aip-*
        generate_release_notes: true
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Get version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Build binaries
      run: |
        mkdir -p dist
        
        # Linux
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o dist/protoc-gen-rust-aip-linux-amd64 ./cmd/protoc-gen-rust-aip
        GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o dist/protoc-gen-rust-aip-linux-arm64 ./cmd/protoc-gen-rust-aip
        
        # macOS
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o dist/protoc-gen-rust-aip-darwin-amd64 ./cmd/protoc-gen-rust-aip
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o dist/protoc-gen-rust-aip-darwin-arm64 ./cmd/protoc-gen-rust-aip
        
        # Windows
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o dist/protoc-gen-rust-aip-windows-amd64.exe ./cmd/protoc-gen-rust-aip

    - name: Create checksums
      run: |
        cd dist
        sha256sum * > checksums.txt

    - name: Generate changelog
      id: changelog
      run: |
        if [ -f CHANGELOG.md ]; then
          # Extract changelog for this version
          awk '/^## \[${{ steps.version.outputs.VERSION }}\]/{flag=1; next} /^## \[/{flag=0} flag' CHANGELOG.md > release_notes.md
        else
          echo "Release ${{ steps.version.outputs.VERSION }}" > release_notes.md
          echo "" >> release_notes.md
          echo "### Changes" >> release_notes.md
          echo "See commit history for details." >> release_notes.md
        fi

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ steps.version.outputs.VERSION }}
        body_path: release_notes.md
        draft: false
        prerelease: ${{ contains(steps.version.outputs.VERSION, '-') }}
        files: |
          dist/*
        token: ${{ secrets.GITHUB_TOKEN }}

  publish-homebrew:
    name: Update Homebrew Formula
    runs-on: ubuntu-latest
    needs: build
    if: ${{ !contains(github.ref, '-') }} # Only for stable releases
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Update Homebrew formula
      uses: mislav/bump-homebrew-formula-action@v3
      with:
        formula-name: protoc-gen-rust-aip
        formula-path: Formula/protoc-gen-rust-aip.rb
        homebrew-tap: AnteWall/homebrew-tap
        download-url: https://github.com/AnteWall/protoc-gen-rust-aip/releases/download/v${{ steps.version.outputs.VERSION }}/protoc-gen-rust-aip-darwin-arm64
        commit-message: |
          protoc-gen-rust-aip ${{ steps.version.outputs.VERSION }}
          
          Created by GitHub Actions
      env:
        COMMITTER_TOKEN: ${{ secrets.HOMEBREW_TOKEN }}
